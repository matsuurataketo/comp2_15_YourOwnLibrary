// ConsoleApplication.cpp : このファイルには 'main' 関数が含まれています。プログラム実行の開始と終了がそこで行われます。
//

#include <stdio.h>
#include "../include/lib_func.h"

int main()
{
	// ここでオレオレライブラリを使った素敵なサンプルを作る
	printf("%d\n", my_func_int());
	printf("%s\n", my_func_bool() ? "true" : "false");
	
	int val1, val2, val3, sum;

	val1 = 9;
	val2 = 99;
	printf("%dは%dの%s\n", val2, val1, is_same(val1, val2) ? "倍数である" : "倍数ではない");

	val1 = 4;
	val2 = 24;
	printf("%dは%dの%s\n", val2, val1, is_same(val1, val2) ? "倍数である" : "倍数ではない");

	sum = 6;
	val1 = 6;
	val2 = 6;
	val3 = 6;
	printf("%dと%dと%dの任意の数の和が%dの倍数になる組み合わせは%d通りです\n", val1, val2, val3, sum, calc_BAY_3(sum, val1, val2, val3));

	sum = 6;
	val1 = 4;
	val2 = 8;
	val3 = 8;
	printf("%dと%dと%dの任意の数の和が%dの倍数になる組み合わせは%d通りです\n", val1, val2, val3, sum, calc_BAY_3(sum, val1, val2, val3));

	return 0;
}

// プログラムの実行: Ctrl + F5 または [デバッグ] > [デバッグなしで開始] メニュー
// プログラムのデバッグ: F5 または [デバッグ] > [デバッグの開始] メニュー

// 作業を開始するためのヒント: 
//    1. ソリューション エクスプローラー ウィンドウを使用してファイルを追加/管理します 
//   2. チーム エクスプローラー ウィンドウを使用してソース管理に接続します
//   3. 出力ウィンドウを使用して、ビルド出力とその他のメッセージを表示します
//   4. エラー一覧ウィンドウを使用してエラーを表示します
//   5. [プロジェクト] > [新しい項目の追加] と移動して新しいコード ファイルを作成するか、[プロジェクト] > [既存の項目の追加] と移動して既存のコード ファイルをプロジェクトに追加します
//   6. 後ほどこのプロジェクトを再び開く場合、[ファイル] > [開く] > [プロジェクト] と移動して .sln ファイルを選択します
